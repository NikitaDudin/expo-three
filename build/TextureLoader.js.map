{"version":3,"file":"TextureLoader.js","sourceRoot":"","sources":["../src/TextureLoader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAE/C,OAAO,KAAK,MAAM,SAAS,CAAC;AAE5B,KAAK,UAAU,sBAAsB,CACnC,GAAW;IAEX,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,KAAK,CAAC,OAAO,CACX,GAAG,EACH,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAChB,OAAO,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpB,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QACzC,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,OAAO,OAAO,iBAAkB,SAAQ,KAAK,CAAC,aAAa;IAChE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO;QACrC,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,KAAK,CACb,2DAA2D,CAC5D,CAAC;SACH;QACD,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;QACpC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACxC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC,KAAK,IAAI,EAAE;YACV,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,CAAC;YAC9C,SAAS,UAAU,CAAC,KAAK;gBACvB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBACtB,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC3B,IAAI,MAAM,KAAK,SAAS,EAAE;oBACxB,MAAM,CAAC,OAAO,CAAC,CAAC;iBACjB;YACH,CAAC;YACD,IAAI,QAAQ,CAAC,EAAE,KAAK,KAAK,EAAE;gBACzB,MAAM,CAAC,IAAI,CACT,WAAW,CAAC,QAAS,EACrB,KAAK,CAAC,EAAE;oBACN,UAAU,CAAC,KAAK,CAAC,CAAC;gBACpB,CAAC,EACD,UAAU,EACV,OAAO,CACR,CAAC;aACH;iBAAM;gBACL,IACE,WAAW,CAAC,QAAQ;oBACpB,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,uBAAuB,CAAC;oBACnD,CAAC,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAC3C;oBACA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,sBAAsB,CACpD,WAAW,CAAC,QAAQ,CACrB,CAAC;oBACF,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;oBAC1B,WAAW,CAAC,MAAM,GAAG,MAAM,CAAC;iBAC7B;gBAED,OAAO,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC,kDAAkD;gBACnF,UAAU,CAAC;oBACT,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK;oBACvC,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM;iBAC3C,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,EAAE,CAAC;QACL,OAAO,OAAO,CAAC;IACjB,CAAC;CACF;AACD,yCAAyC","sourcesContent":["import { resolveAsync } from 'expo-asset-utils';\nimport { Image, Platform } from 'react-native';\n\nimport THREE from './Three';\n\nasync function requestImageSizesAsync(\n  url: string\n): Promise<{ width: number | null; height: number | null }> {\n  return new Promise(resolve => {\n    Image.getSize(\n      url,\n      (width, height) => {\n        resolve({ width, height });\n      },\n      error => {\n        console.warn(error);\n        resolve({ width: null, height: null });\n      }\n    );\n  });\n}\n\nexport default class ExpoTextureLoader extends THREE.TextureLoader {\n  load(asset, onLoad, onProgress, onError) {\n    if (!asset) {\n      throw new Error(\n        'ExpoTHREE.TextureLoader.load(): Cannot parse a null asset'\n      );\n    }\n    const texture = new THREE.Texture();\n    const loader = new THREE.ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    (async () => {\n      const nativeAsset = await resolveAsync(asset);\n      function parseAsset(image) {\n        texture.image = image;\n        texture.needsUpdate = true;\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }\n      if (Platform.OS === 'web') {\n        loader.load(\n          nativeAsset.localUri!,\n          image => {\n            parseAsset(image);\n          },\n          onProgress,\n          onError\n        );\n      } else {\n        if (\n          nativeAsset.localUri &&\n          nativeAsset.localUri.match(/\\.(jpeg|jpg|gif|png)$/) &&\n          (!nativeAsset.width || !nativeAsset.height)\n        ) {\n          const { width, height } = await requestImageSizesAsync(\n            nativeAsset.localUri\n          );\n          nativeAsset.width = width;\n          nativeAsset.height = height;\n        }\n\n        texture['isDataTexture'] = true; // Forces passing to `gl.texImage2D(...)` verbatim\n        parseAsset({\n          data: nativeAsset,\n          width: asset.width || nativeAsset.width,\n          height: asset.height || nativeAsset.height,\n        });\n      }\n    })();\n    return texture;\n  }\n}\n//# sourceMappingURL=TextureLoader.js.map\n"]}